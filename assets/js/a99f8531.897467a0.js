"use strict";(self.webpackChunkio_t_workshop=self.webpackChunkio_t_workshop||[]).push([[177],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(a),c=r,h=u["".concat(p,".").concat(c)]||u[c]||m[c]||o;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},510:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={},p="3 - Exercise: Simple IoT App",s={unversionedId:"Exercise\ua789 Simple IoT App",id:"Exercise\ua789 Simple IoT App",title:"3 - Exercise: Simple IoT App",description:"Please read this next few sentence very carefully!!! You do this exercise ideally in groups of two but of course you can do it alone or with more people. With two people one person does Part 1 and the other Part 2.",source:"@site/docs/3 - Exercise\ua789 Simple IoT App.md",sourceDirName:".",slug:"/Exercise\ua789 Simple IoT App",permalink:"/IoT-Workshop/docs/Exercise\ua789 Simple IoT App",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/3 - Exercise\ua789 Simple IoT App.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2 - Node-RED Getting Started",permalink:"/IoT-Workshop/docs/Node-RED Getting Started"}},d={},m=[{value:"Part 1: RaspberryPi",id:"part-1-raspberrypi",level:2},{value:"Step 1: Create Node-RED App on RPi",id:"step-1-create-node-red-app-on-rpi",level:3},{value:"Step 2: Create the Node-RED flow",id:"step-2-create-the-node-red-flow",level:3},{value:"Part 2: IBM Cloud",id:"part-2-ibm-cloud",level:2},{value:"Creating the Node-RED Flow on the IBM Cloud",id:"creating-the-node-red-flow-on-the-ibm-cloud",level:3}],u={toc:m};function c(e){var t=e.components,l=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"3---exercise-simple-iot-app"},"3 - Exercise: Simple IoT App"),(0,o.kt)("img",{src:a(5481).Z}),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Please read this next few sentence very carefully!!! You do this exercise ideally in groups of two but of course you can do it alone or with more people. With two people one person does ",(0,o.kt)("strong",{parentName:"p"},"Part 1")," and the other ",(0,o.kt)("strong",{parentName:"p"},"Part 2"),"."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Part 1")," of the exercise is about accessing an RaspberryPi (a mini Computer) and then creating a programm locally with a Node-RED instance also running locally on the Raspi. This program simply runs a command in on the Raspi to read its CPU temperatur every second and then sends it to the cloud."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Part 2")," is about using our Node-RED service on the IBM Cloud to create an other program. This one should then receive the CPU temperatur from the Raspi and create a dashboard to visualize the evlution of the CPU temperatur."))),(0,o.kt)("h2",{id:"part-1-raspberrypi"},"Part 1: RaspberryPi"),(0,o.kt)("h3",{id:"step-1-create-node-red-app-on-rpi"},"Step 1: Create Node-RED App on RPi"),(0,o.kt)("p",null,"Instead of running our Node-RED App in the cloud you can also run it on a RaspberryPi for example. This mini computers have become quite powerful and are used for a lot of stuff nowadays. The next step show you how access the Raspi and start a Node-RED instance."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open the terminal on your computer and connect to your RPi with the following SSH command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh pi@TJxx.simple.eee.intern\npassword: raspberry\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Open Node-RED with the following command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"node-red start\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"We already installed Node-RED for you on this devices to save you some hustle. But if you like to use Node-RED on your own RaspberryPi just download it following the Guide on the Node-RED website."))),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Open your internetbrowser and navigate to the Node-RED Editor:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://TJxx.simple.eee.intern:1880/\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Again, the RaspberryPi is hosting the Node-RED App. But you can access it from any devices browser which is currently in the same local network"))),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},'Create a new Flow/Canvas by pressing "+"')),(0,o.kt)("img",{src:a(2319).Z}),(0,o.kt)("h3",{id:"step-2-create-the-node-red-flow"},"Step 2: Create the Node-RED flow"),(0,o.kt)("p",null,"The architecture of our Node-RED program can be explained rather simple. It only needs four components or nodes as they are called in Node-RED."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The inject node"),": It is the first node of the flow and triggers once started your programm to rerun in a preset intervall."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Payload: ",(0,o.kt)("inlineCode",{parentName:"li"},"timestamp")),(0,o.kt)("li",{parentName:"ul"},"Topic: leave empty, and don't check box."),(0,o.kt)("li",{parentName:"ul"},"Repeat: ",(0,o.kt)("inlineCode",{parentName:"li"},"interval"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"3"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"seconds")),(0,o.kt)("li",{parentName:"ul"},"Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"Set measure intervall"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The exec node"),": This node simply runs a terminal command on the RaspberryPi. This command reads the CPU Temperature."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Command: ",(0,o.kt)("inlineCode",{parentName:"li"},"vdcgencmd measure_temp | cut -c6-9")),(0,o.kt)("li",{parentName:"ul"},"Append: don't check msg.payload box and leave extra input parameters empty."),(0,o.kt)("li",{parentName:"ul"},"Output: ",(0,o.kt)("inlineCode",{parentName:"li"},"when the command is compilete - exec mode")),(0,o.kt)("li",{parentName:"ul"},"Timeout: leave empty"),(0,o.kt)("li",{parentName:"ul"},"Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"Read Raspi CPU Temperature")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Note"),": The exec node has multiple connections, you need to use the top one as it is the output.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The http request node"),": The http node sends the measured CPU temperature to a specified location on the Internet. We gonna send it to your partners IBM Cloud Node-RED service. For that you need to figure out the host address of your partners IBM Cloud Node-RED service. Just check his App URL on the IBM Cloud and than add ",(0,o.kt)("inlineCode",{parentName:"p"},"/data")," at the end. Your URL should look like ",(0,o.kt)("a",{parentName:"p",href:"http://159.122.179.33:32223/data"},"http://159.122.179.33:32223/data")," just with different numbers."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Method: ",(0,o.kt)("inlineCode",{parentName:"li"},"POST")),(0,o.kt)("li",{parentName:"ul"},"URL: ",(0,o.kt)("inlineCode",{parentName:"li"},"Your URL")),(0,o.kt)("li",{parentName:"ul"},"Return: ```a paresd JSON object````"),(0,o.kt)("li",{parentName:"ul"},"Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"HTTP Send"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The debug node"),": Finally, it is good practice to add a debug node at the end to check what the http node is sending and receiving. But this is not strictly neccessary for your programm to work."),(0,o.kt)("img",{src:a(1306).Z}),(0,o.kt)("h2",{id:"part-2-ibm-cloud"},"Part 2: IBM Cloud"),(0,o.kt)("p",null,"On the Cloud all of you already created a Node-Red App. The task remaining is creating a Node-RED flow or you could say writing the actual program."),(0,o.kt)("h3",{id:"creating-the-node-red-flow-on-the-ibm-cloud"},"Creating the Node-RED Flow on the IBM Cloud"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The http in node"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Method: ",(0,o.kt)("inlineCode",{parentName:"li"},"POST")),(0,o.kt)("li",{parentName:"ul"},"URL: ",(0,o.kt)("inlineCode",{parentName:"li"},"/data")),(0,o.kt)("li",{parentName:"ul"},"Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"HTTP Receive"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The function node"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Name: ```String parsing````"),(0,o.kt)("li",{parentName:"ul"},"Function: add the following code",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"const temp = parseFloat(msg.payload);\nmsg.payload = temp;\nreturn msg;\n")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The http reponse node"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Leave at it is.")),(0,o.kt)("img",{src:a(9450).Z}),(0,o.kt)("p",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The chart node"),": The chart not is used to visualize our CPU measurements on the Raspberry Pi over time. It is not yet installed. See on the Node-RED Getting Started documentation on how to install new nodes or just have a look at the image below."),(0,o.kt)("img",{src:a(9272).Z}),(0,o.kt)("p",null,"After the installation process you can now add the chart node to your flow and configure it."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Group: Click on edit symbol",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"Raspi CPU temperature [C]")),(0,o.kt)("li",{parentName:"ul"},"Tab: Click on edit symbol",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"Home")),(0,o.kt)("li",{parentName:"ul"},"Icon: ",(0,o.kt)("inlineCode",{parentName:"li"},"dashboard")),(0,o.kt)("li",{parentName:"ul"},"State: Enabled"),(0,o.kt)("li",{parentName:"ul"},"Nav. Menu: Enabled"))),(0,o.kt)("li",{parentName:"ul"},"Width: ",(0,o.kt)("inlineCode",{parentName:"li"},"15")),(0,o.kt)("li",{parentName:"ul"},"Display groupe name: Check this box."),(0,o.kt)("li",{parentName:"ul"},"Allow group to be collapsed: Don't check this box."))),(0,o.kt)("li",{parentName:"ul"},"Size: ```auto````"),(0,o.kt)("li",{parentName:"ul"},"Label: ",(0,o.kt)("inlineCode",{parentName:"li"},"CPU temp")),(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"Line chart"),', don\'t check "enlarge points"'),(0,o.kt)("li",{parentName:"ul"},"X-axis: last ",(0,o.kt)("inlineCode",{parentName:"li"},"1"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"hours")," OR ",(0,o.kt)("inlineCode",{parentName:"li"},"1000")),(0,o.kt)("li",{parentName:"ul"},"X-axis Label: ",(0,o.kt)("inlineCode",{parentName:"li"},"HH:mm:ss"),', don\'t check "as UTC"'),(0,o.kt)("li",{parentName:"ul"},"Y-axis: leave min and max empty"),(0,o.kt)("li",{parentName:"ul"},"Legend: ",(0,o.kt)("inlineCode",{parentName:"li"},"None"),", Interpolate: ",(0,o.kt)("inlineCode",{parentName:"li"},"linear")),(0,o.kt)("li",{parentName:"ul"},"Blank label: leave empty"),(0,o.kt)("li",{parentName:"ul"},"Name: ",(0,o.kt)("inlineCode",{parentName:"li"},"CPU Temp. Chart"))),(0,o.kt)("img",{src:a(7465).Z}),(0,o.kt)("img",{src:a(5039).Z}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The debug node"),": Finally, it is good practice to add a debug node at the end to check what the http node is sending and receiving. But this is not strictly neccessary for your programm to work."))}c.isMDXComponent=!0},5481:function(e,t,a){t.Z=a.p+"assets/images/Clipboard_2022-05-02-11-14-33-bead23687363ec44d4c09b47e53f791b.png"},2319:function(e,t,a){t.Z=a.p+"assets/images/Clipboard_2022-05-23-16-05-29-462e57adf302d260ba4b454ecbba4b9d.png"},1306:function(e,t,a){t.Z=a.p+"assets/images/Clipboard_2022-05-23-16-06-28-cf0452780ca714f681266b368224d503.png"},5039:function(e,t,a){t.Z=a.p+"assets/images/Clipboard_2022-05-23-16-15-39-465d2bf76de8fc35e16ed6ab2d8f3553.png"},7465:function(e,t,a){t.Z=a.p+"assets/images/Clipboard_2022-05-23-16-15-56-9b62ebfeebff4f1f1c518172ef6350bb.png"},9272:function(e,t,a){t.Z=a.p+"assets/images/Clipboard_2022-05-23-16-16-16-96f1a3371df2197122eb82ca5035772e.png"},9450:function(e,t,a){t.Z=a.p+"assets/images/Clipboard_2022-05-23-16-16-41-d55184df5c5ed98492cf1ccb1acb3970.png"}}]);